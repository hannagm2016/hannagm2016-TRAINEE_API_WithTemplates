basePath: /
definitions:
  models.Comments:
    properties:
      body:
        type: string
      email:
        type: string
      id:
        type: number
      name:
        type: string
      postId:
        type: number
    type: object
  models.Post:
    properties:
      body:
        type: string
      comment:
        items:
          $ref: '#/definitions/models.Comments'
        type: array
      id:
        type: number
      title:
        type: string
      userId:
        type: number
    type: object
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is an implementation of api server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API for trainee exercise
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - application/json
      description: all posts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Post'
            type: array
        "500":
          description: fail
          schema:
            type: string
      summary: Show all post
      tags:
      - Posts
  /authorisation:
    get:
      consumes:
      - application/json
      description: Entering login and pass into authorisation form
      produces:
      - application/json
      responses:
        "200":
          description: authorisation form
          schema:
            type: string
        "500":
          description: fail
          schema:
            type: string
      summary: Authorisation form
      tags:
      - User
  /authorisationPost:
    post:
      consumes:
      - application/json
      description: Creating cookie, set IsAuthorize as true
      produces:
      - application/json
      responses:
        "200":
          description: user authorised
          schema:
            type: string
        "500":
          description: fail
          schema:
            type: string
      summary: Authorisation process
      tags:
      - User
  /deletePost/{id}:
    delete:
      consumes:
      - application/json
      description: delete post by ID
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: string
        "403":
          description: not registered
          schema:
            type: string
        "404":
          description: not found
          schema:
            type: string
      summary: Delete one post with id specified
      tags:
      - Posts
  /logout:
    get:
      consumes:
      - application/json
      description: removing cookie, set IsAuthorize as false
      produces:
      - application/json
      responses:
        "200":
          description: user logged out
          schema:
            type: string
        "500":
          description: fail
          schema:
            type: string
      summary: Log out, remove authorisation
      tags:
      - User
  /post:
    get:
      consumes:
      - application/json
      description: Form for creation new post
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - text/xml
      responses:
        "200":
          description: success - redirect to save post
          schema:
            type: string
        "403":
          description: not registered
          schema:
            type: string
        "404":
          description: not found
          schema:
            type: string
      summary: Form for creation new post
      tags:
      - Posts
  /post/{id}:
    get:
      consumes:
      - application/json
      description: get post by ID
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "404":
          description: not found
          schema:
            type: string
      summary: Show single post with id specified
      tags:
      - Posts
  /postUpdate/{id}:
    get:
      consumes:
      - application/json
      description: Get post and edit it
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: success - redirect to save post
          schema:
            type: string
        "403":
          description: not registered
          schema:
            type: string
        "404":
          description: not found
          schema:
            type: string
      summary: Form for updating post
      tags:
      - Posts
  /registration:
    get:
      consumes:
      - application/json
      description: Creating user, cookie, set IsAuthorize as true
      produces:
      - application/json
      responses:
        "200":
          description: redirect to registrationPost
          schema:
            type: string
        "500":
          description: fail
          schema:
            type: string
      summary: Registration form
      tags:
      - User
  /registrationPost:
    post:
      consumes:
      - application/json
      description: Creating user, cookie, set IsAuthorize as true
      produces:
      - application/json
      responses:
        "200":
          description: 'user registrate '
          schema:
            type: string
        "500":
          description: fail
          schema:
            type: string
      summary: Registration process
      tags:
      - User
  /savePost:
    post:
      consumes:
      - application/json
      description: Save post to db
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: number
      - description: title
        in: path
        name: title
        type: string
      - description: body
        in: path
        name: body
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success - redirect to index
          schema:
            type: string
        "500":
          description: fail
          schema:
            type: string
      summary: Save new or updated post
      tags:
      - Posts
swagger: "2.0"
